cmake_minimum_required(VERSION 3.13)

project(PucMan LANGUAGES CXX)

# Set project constants
set(PROJECT_ROOT ${CMAKE_CURRENT_SOURCE_DIR}) # Project dir
set(BINARIES_DIR ${PROJECT_ROOT}/bin) # Binaries dir
set(INTERMEDIATES_DIR ${CMAKE_BINARY_DIR}) # Intermediates dir

IF (MSVC)
	#Set startup project
	set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT PucMan)
	
	# Enable Hot Reload
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MDd /ZI /Ob0 /Od /RTC1")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd /ZI /Ob0 /Od /RTC1")
	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /debug /INCREMENTAL /LTCG:OFF")
	set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} /debug /INCREMENTAL /LTCG:OFF")
	set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /debug /INCREMENTAL /LTCG:OFF")
	
	# MP build for MSVC
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP /EHsc")
ENDIF()

#Global cmake features
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Set project constants
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${BINARIES_DIR}/Lib")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${BINARIES_DIR}/Bin")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${BINARIES_DIR}/Bin")
set(CMAKE_VS_DEBUGGER_WORKING_DIRECTORY "${PROJECT_ROOT}")

find_package(SDL2 REQUIRED)

file(GLOB_RECURSE SOURCES src/*.cpp src/*.hpp)
add_executable(PucMan ${SOURCES})
set_target_properties(PucMan PROPERTIES 
	ARCHIVE_OUTPUT_DIRECTORY "${BINARIES_DIR}/Lib"
	RUNTIME_OUTPUT_DIRECTORY "${BINARIES_DIR}/Bin"
	LIBRARY_OUTPUT_DIRECTORY "${BINARIES_DIR}/Bin"
	VS_DEBUGGER_WORKING_DIRECTORY "${PROJECT_ROOT}")
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_20)
set_target_properties(PucMan PROPERTIES CXX_EXTENSIONS OFF)
source_group(TREE ${PROJECT_ROOT} FILES ${SOURCES})
target_include_directories(PucMan PRIVATE ${SDL2_INCLUDE_DIRS})
target_compile_definitions(PucMan PRIVATE "SDL_MAIN_HANDLED")
target_link_libraries(PucMan PRIVATE ${SDL2_LIBRARIES})

